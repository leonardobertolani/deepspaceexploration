#include <algorithm>
#include <stdio.h>
#include <vector>

#include "ldl_lsolve_vec.h"

std::vector<int_vec> buff_to_intvec(int* b, size_t len) {
    std::vector<int_vec> v;
    int_vec chunk;
    for (size_t i = 0; i < len; i+=8) {
        size_t chunk_size = 8 <= (len - i) ? 8 : (len - i);
        size_t j = 0;
        for (; j < chunk_size; j++) {
            chunk[j] = b[i+j];
        }
        for (; j < 8; j++) {
            chunk[j] = 0;
        }
        v.push_back(chunk);
    }
    return v;
}

std::vector<int_vec> buff_to_intvec_padlast(int* b, size_t len) {
    std::vector<int_vec> v;
    int_vec chunk;
    for (size_t i = 0; i < len; i+=8) {
        size_t chunk_size = 8 <= (len - i) ? 8 : (len - i);
        size_t j = 0;
        for (; j < chunk_size; j++) {
            chunk[j] = b[i+j];
        }
        for (; j < 8; j++) {
            chunk[j] = b[len-1];
        }
        v.push_back(chunk);
    }
    /*
    for (int i = 0; i < v.size(); i++) {
        for (int j = 0; j < 8; j++) {
            printf("%d ", v[i][j]);
        }
        printf("\n");
    }
    */
    return v;
}

std::vector<double_vec> buff_to_dvec(double* b, size_t len) {
    std::vector<double_vec> v;
    double_vec chunk;
    for (size_t i = 0; i < len; i+=4) {
        size_t chunk_size = 4 <= (len - i) ? 4 : (len - i);
        size_t j = 0;
        for (; j < chunk_size; j++) {
            chunk[j] = b[i+j];
        }
        for (; j < 4; j++) {
            chunk[j] = 0;
        }
        v.push_back(chunk);
    }
    return v;
}


bool v_eq(DTYPE* x1, double_vec* x2, int len) {
    size_t j = 0, k = 0;
	for (auto i = 0; i < len; i++) {
        if (k >= 4) {
            k = 0;
            j++;
        }
	    double x2_el = x2[j][k];
	    k++;
		//printf("i: %d, x1 %f, x2 %f\n", i, x1[i], x2_el);
		if (abs(x1[i] - x2_el) > 1e-6) {
			return false;
		}
	}
	return true;
}



void LDL_lsolve2
(
    int n,		/* L is n-by-n, where n >= 0 */
	DTYPE b [ ],	/* size n. input. right-hand-side */    
    int Lp [ ],	/* input of size n+1, not modified */
    int Li [ ],	/* input of size lnz=Lp[n], not modified */
    DTYPE Lx [ ],	/* input of size lnz=Lp[n], not modified */
	DTYPE x [ ]	/* size n. output. solution to Lx=b */
)
{
    int j, p, p2 ;
	for( j=0; j < n; j++ ){ x[j] = b[j]; }
    for (j = 0 ; j < n ; j++){		
		p2 = Lp [j+1] ;
		for (p = Lp [j] ; p < p2 ; p++){ 
			x [Li [p]] -= Lx [p] * x [j]; 
		}
    }
}


int main() {
    
    /*
    1           = 2 -> x = 2
    3   1       = 1 -> y = -5
    2   4   1   = 1 -> z = 17
    
    
    int ir[3] = {1, 2, 2};
    int jc[4] = {0, 2, 3, 3};
    DTYPE pr[3]= {3, 2,  4};
    spm_info info = {3, 3, 3};
    
    DTYPE B[3] = {2, 1, 1};
    DTYPE X[3];
    DTYPE result[3] = {0.0};
    */
    
    spm_info info = {569, 569, 971};
    int jc[570] = {0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 98, 100, 102, 104, 107, 110, 113, 117, 120, 124, 128, 132, 136, 140, 144, 148, 152, 156, 160, 164, 168, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 245, 247, 249, 251, 254, 257, 260, 264, 267, 271, 275, 279, 283, 287, 291, 295, 299, 303, 307, 311, 315, 319, 323, 327, 331, 335, 339, 343, 347, 351, 355, 359, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 460, 462, 464, 466, 469, 472, 475, 479, 482, 486, 490, 494, 498, 502, 506, 510, 514, 518, 522, 526, 530, 534, 538, 542, 546, 550, 554, 558, 562, 566, 570, 574, 578, 582, 586, 590, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 679, 681, 683, 685, 688, 691, 694, 698, 701, 705, 709, 713, 717, 721, 725, 729, 733, 737, 741, 745, 749, 753, 757, 761, 765, 769, 773, 777, 781, 785, 789, 793, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 851, 853, 855, 857, 859, 861, 863, 866, 868, 870, 872, 874, 876, 878, 880, 882, 884, 886, 888, 891, 894, 897, 901, 904, 908, 912, 916, 920, 924, 928, 932, 936, 940, 944, 948, 952, 956, 961, 965, 968, 970, 971, 971};
    int ir[971] = {1, 566, 3, 566, 5, 567, 7, 567, 9, 471, 11, 471, 13, 470, 15, 470, 17, 354, 19, 354, 21, 353, 23, 353, 25, 352, 27, 352, 29, 221, 31, 221, 33, 220, 35, 220, 37, 219, 39, 219, 41, 218, 43, 218, 45, 217, 47, 217, 49, 116, 51, 116, 53, 115, 55, 115, 57, 114, 59, 114, 61, 113, 63, 113, 65, 112, 67, 112, 69, 111, 71, 111, 73, 110, 75, 110, 77, 109, 79, 109, 81, 108, 83, 108, 85, 107, 87, 107, 89, 106, 91, 106, 93, 105, 95, 105, 102, 104, 101, 117, 100, 103, 100, 102, 101, 102, 103, 102, 103, 117, 103, 104, 117, 104, 117, 563, 568, 117, 563, 568, 117, 563, 564, 568, 117, 563, 564, 568, 117, 563, 564, 568, 117, 563, 564, 568, 117, 563, 564, 568, 117, 563, 564, 568, 117, 563, 564, 568, 117, 563, 564, 568, 117, 563, 564, 568, 117, 563, 564, 568, 117, 563, 564, 568, 117, 563, 564, 568, 563, 564, 568, 119, 216, 121, 216, 123, 215, 125, 215, 127, 214, 129, 214, 131, 213, 133, 213, 135, 212, 137, 212, 139, 211, 141, 211, 143, 210, 145, 210, 147, 209, 149, 209, 151, 208, 153, 208, 155, 207, 157, 207, 159, 206, 161, 206, 163, 205, 165, 205, 167, 204, 169, 204, 171, 203, 173, 203, 175, 202, 177, 202, 179, 201, 181, 201, 183, 200, 185, 200, 187, 199, 189, 199, 196, 198, 195, 222, 194, 197, 194, 196, 195, 196, 197, 196, 197, 222, 197, 198, 222, 198, 222, 563, 568, 222, 563, 568, 222, 563, 564, 568, 222, 563, 564, 568, 222, 563, 564, 568, 222, 563, 564, 568, 222, 563, 564, 568, 222, 563, 564, 568, 222, 563, 564, 568, 222, 563, 564, 568, 222, 563, 564, 568, 222, 563, 564, 568, 222, 563, 564, 568, 222, 563, 564, 568, 222, 563, 564, 568, 222, 563, 564, 568, 222, 563, 564, 568, 222, 563, 564, 568, 222, 563, 564, 568, 222, 563, 564, 568, 222, 563, 564, 568, 222, 563, 564, 568, 222, 563, 564, 568, 222, 563, 564, 568, 222, 563, 564, 568, 563, 564, 568, 224, 351, 226, 351, 228, 350, 230, 350, 232, 349, 234, 349, 236, 348, 238, 348, 240, 347, 242, 347, 244, 346, 246, 346, 248, 345, 250, 345, 252, 344, 254, 344, 256, 343, 258, 343, 260, 342, 262, 342, 264, 341, 266, 341, 268, 340, 270, 340, 272, 339, 274, 339, 276, 338, 278, 338, 280, 337, 282, 337, 284, 336, 286, 336, 288, 335, 290, 335, 292, 334, 294, 334, 296, 333, 298, 333, 300, 332, 302, 332, 304, 331, 306, 331, 308, 330, 310, 330, 312, 329, 314, 329, 316, 328, 318, 328, 325, 327, 324, 355, 323, 326, 323, 325, 324, 325, 326, 325, 326, 355, 326, 327, 355, 327, 355, 563, 568, 355, 563, 568, 355, 563, 564, 568, 355, 563, 564, 568, 355, 563, 564, 568, 355, 563, 564, 568, 355, 563, 564, 568, 355, 563, 564, 568, 355, 563, 564, 568, 355, 563, 564, 568, 355, 563, 564, 568, 355, 563, 564, 568, 355, 563, 564, 568, 355, 563, 564, 568, 355, 563, 564, 568, 355, 563, 564, 568, 355, 563, 564, 568, 355, 563, 564, 568, 355, 563, 564, 568, 355, 563, 564, 568, 355, 563, 564, 568, 355, 563, 564, 568, 355, 563, 564, 568, 355, 563, 564, 568, 355, 563, 564, 568, 355, 563, 564, 568, 355, 563, 564, 568, 355, 563, 564, 568, 355, 563, 564, 568, 563, 564, 568, 357, 469, 359, 469, 361, 468, 363, 468, 365, 467, 367, 467, 369, 466, 371, 466, 373, 465, 375, 465, 377, 464, 379, 464, 381, 463, 383, 463, 385, 462, 387, 462, 389, 461, 391, 461, 393, 460, 395, 460, 397, 459, 399, 459, 401, 458, 403, 458, 405, 457, 407, 457, 409, 456, 411, 456, 413, 455, 415, 455, 417, 454, 419, 454, 421, 453, 423, 453, 425, 452, 427, 452, 429, 451, 431, 451, 433, 450, 435, 450, 437, 449, 439, 449, 446, 448, 445, 472, 444, 447, 444, 446, 445, 446, 447, 446, 447, 472, 447, 448, 472, 448, 472, 563, 568, 472, 563, 568, 472, 563, 564, 568, 472, 563, 564, 568, 472, 563, 564, 568, 472, 563, 564, 568, 472, 563, 564, 568, 472, 563, 564, 568, 472, 563, 564, 568, 472, 563, 564, 568, 472, 563, 564, 568, 472, 563, 564, 568, 472, 563, 564, 568, 472, 563, 564, 568, 472, 563, 564, 568, 472, 563, 564, 568, 472, 563, 564, 568, 472, 563, 564, 568, 472, 563, 564, 568, 472, 563, 564, 568, 472, 563, 564, 568, 472, 563, 564, 568, 472, 563, 564, 568, 472, 563, 564, 568, 472, 563, 564, 568, 563, 564, 568, 474, 562, 476, 562, 478, 561, 480, 561, 482, 560, 484, 560, 486, 559, 488, 559, 490, 558, 492, 558, 494, 557, 496, 557, 498, 556, 500, 556, 502, 555, 504, 555, 506, 554, 508, 554, 510, 553, 512, 553, 514, 552, 516, 552, 518, 551, 520, 551, 522, 550, 524, 550, 526, 527, 530, 528, 530, 529, 530, 530, 533, 531, 533, 532, 533, 533, 534, 534, 535, 538, 535, 538, 536, 538, 537, 538, 538, 563, 539, 563, 540, 563, 563, 568, 547, 549, 546, 565, 545, 548, 545, 547, 546, 547, 548, 547, 548, 565, 548, 549, 565, 549, 563, 565, 568, 563, 565, 568, 563, 564, 565, 568, 563, 564, 565, 568, 563, 564, 565, 568, 563, 564, 565, 568, 563, 564, 565, 568, 563, 564, 565, 568, 563, 564, 565, 568, 563, 564, 565, 568, 563, 564, 565, 568, 563, 564, 565, 568, 563, 564, 565, 568, 563, 564, 565, 568, 563, 564, 565, 568, 564, 565, 566, 567, 568, 565, 566, 567, 568, 566, 567, 568, 567, 568, 568};
    DTYPE pr[971]= {1.000000, 0.987291, 1.000000, -0.987291, 1.000000, 0.952642, 1.000000, -0.952642, 1.000000, 1.000000, 1.000000, -1.000000, 1.000000, 1.000000, 1.000000, -1.000000, 1.000000, 0.966990, 1.000000, -0.966990, 1.000000, 0.768397, 1.000000, -0.768397, 1.000000, 0.942423, 1.000000, -0.942423, 1.000000, 1.000000, 1.000000, -1.000000, 1.000000, 0.983103, 1.000000, -0.983103, 1.000000, 0.988888, 1.000000, -0.988888, 1.000000, 1.000000, 1.000000, -1.000000, 1.000000, 1.000000, 1.000000, -1.000000, 1.000000, 0.960802, 1.000000, -0.960802, 1.000000, 0.983897, 1.000000, -0.983897, 1.000000, 1.000000, 1.000000, -1.000000, 1.000000, 1.000000, 1.000000, -1.000000, 1.000000, 0.955415, 1.000000, -0.955415, 1.000000, 0.412047, 1.000000, -0.412047, 1.000000, 0.392566, 1.000000, -0.392566, 1.000000, 0.417767, 1.000000, -0.417767, 1.000000, 0.377608, 1.000000, -0.377608, 1.000000, 0.380018, 1.000000, -0.380018, 1.000000, 0.357991, 1.000000, -0.357991, 1.000000, 0.425790, 1.000000, -0.425790, -5462869.954476, -14285714.285714, -0.000000, 0.382401, -5462869.954476, -14285714.285714, -0.000000, -0.000000, -0.000000, -0.000000, 2.615055, 0.000000, 0.000000, 0.000000, -0.000000, 2.615055, -0.000000, -0.000000, -0.000000, -0.051233, -0.004406, -0.000000, -0.008856, -0.046808, -1.174289, -0.623619, -1.174289, 2.654767, -1.396683, -0.736173, -1.396683, 3.849750, -1.315726, -0.003475, -1.315726, 3.387373, -1.324125, 0.467849, -1.324125, 3.433882, -1.196839, -0.955808, -1.196839, 2.765212, -1.273672, -0.699382, -1.273672, 3.159603, -1.213453, -1.354359, -1.213453, 2.848117, -0.523333, 0.147915, 0.523333, -0.245790, -0.500000, 0.043160, 0.500000, -0.088190, -0.500000, -0.013533, 0.500000, 0.014831, -0.508183, 0.379222, 0.508183, 0.074012, -0.520399, 0.290000, 0.520399, -0.233661, 0.124133, 0.162701, -1.334432, 1.000000, 0.990799, 1.000000, -0.990799, 1.000000, 0.926663, 1.000000, -0.926663, 1.000000, 1.000000, 1.000000, -1.000000, 1.000000, 1.000000, 1.000000, -1.000000, 1.000000, 1.000000, 1.000000, -1.000000, 1.000000, 0.386659, 1.000000, -0.386659, 1.000000, 0.407737, 1.000000, -0.407737, 1.000000, 0.442588, 1.000000, -0.442588, 1.000000, 0.394752, 1.000000, -0.394752, 1.000000, 0.358310, 1.000000, -0.358310, 1.000000, 0.395219, 1.000000, -0.395219, 1.000000, 0.407722, 1.000000, -0.407722, 1.000000, 0.468982, 1.000000, -0.468982, 1.000000, 0.435681, 1.000000, -0.435681, 1.000000, 0.357081, 1.000000, -0.357081, 1.000000, 0.386384, 1.000000, -0.386384, 1.000000, 0.406218, 1.000000, -0.406218, 1.000000, 0.418926, 1.000000, -0.418926, -5462869.954476, -14285714.285714, -0.000000, 0.382401, -5462869.954476, -14285714.285714, -0.000000, -0.000000, -0.000000, -0.000000, 2.615055, 0.000000, 0.000000, 0.000000, -0.000000, 2.615055, -0.000000, -0.000000, -0.000000, -0.092678, 0.007536, -0.000000, 0.015146, -0.011494, -1.193527, 0.264396, -1.193527, 2.748839, -1.230865, -0.807148, -1.230865, 2.936411, -1.294048, 0.018207, -1.294048, 3.268908, -1.400243, -0.414859, -1.400243, 3.870811, -1.147628, -1.008628, -1.147628, 2.527285, -1.066138, -0.989944, -1.066138, 2.158288, -1.226326, -0.355066, -1.226326, 2.913258, -1.265120, 0.107267, -1.265120, 3.114316, -1.395439, 1.213683, -1.395439, 3.842409, -1.266617, -0.743317, -1.266617, 3.122216, -1.129719, -1.386312, -1.129719, 2.443524, -1.226281, -0.129205, -1.226281, 2.913029, -1.293130, -1.653142, -1.293130, 3.263941, -0.500000, -0.144793, 0.500000, -0.122016, -0.500000, 0.198911, 0.500000, -0.162585, -0.500000, -0.308640, 0.500000, 0.081998, -0.539570, 0.287779, 0.539570, -0.323589, -0.504643, 0.356100, 0.504643, -0.131763, -0.500000, -0.206339, 0.500000, -0.067256, -0.500000, 0.147518, 0.500000, 0.161203, -0.505618, 0.362339, 0.505618, 0.014756, -0.508594, 0.324792, 0.508594, -0.190063, -0.500000, 0.037842, 0.500000, 0.069056, 0.129371, 0.128797, -1.289672, 1.000000, 0.987657, 1.000000, -0.987657, 1.000000, 1.000000, 1.000000, -1.000000, 1.000000, 0.991170, 1.000000, -0.991170, 1.000000, 0.952164, 1.000000, -0.952164, 1.000000, 1.000000, 1.000000, -1.000000, 1.000000, 0.977928, 1.000000, -0.977928, 1.000000, 1.000000, 1.000000, -1.000000, 1.000000, 0.912793, 1.000000, -0.912793, 1.000000, 0.932481, 1.000000, -0.932481, 1.000000, 0.742530, 1.000000, -0.742530, 1.000000, 1.000000, 1.000000, -1.000000, 1.000000, 1.000000, 1.000000, -1.000000, 1.000000, 0.420626, 1.000000, -0.420626, 1.000000, 0.360370, 1.000000, -0.360370, 1.000000, 0.363716, 1.000000, -0.363716, 1.000000, 0.425009, 1.000000, -0.425009, 1.000000, 0.378337, 1.000000, -0.378337, 1.000000, 0.373580, 1.000000, -0.373580, 1.000000, 0.385907, 1.000000, -0.385907, 1.000000, 0.365775, 1.000000, -0.365775, 1.000000, 0.437311, 1.000000, -0.437311, 1.000000, 0.425774, 1.000000, -0.425774, 1.000000, 0.375552, 1.000000, -0.375552, 1.000000, 0.363075, 1.000000, -0.363075, -5462869.954476, -14285714.285714, -0.000000, 0.382401, -5462869.954476, -14285714.285714, -0.000000, -0.000000, -0.000000, -0.000000, 2.615055, 0.000000, 0.000000, 0.000000, -0.000000, 2.615055, -0.000000, -0.000000, -0.000000, -0.012801, 0.011651, -0.000000, 0.023415, -0.044397, -1.377124, -0.865274, -1.377124, 3.735151, -1.331373, 0.072494, -1.331373, 3.474286, -1.174331, -0.922714, -1.174331, 2.654974, -1.143351, -1.466763, -1.143351, 2.507145, -1.366962, 0.799001, -1.366962, 3.676338, -1.295650, -1.171444, -1.295650, 3.277586, -1.338402, -0.816598, -1.338402, 3.513710, -1.321571, -0.155689, -1.321571, 3.419705, -1.176447, -0.709926, -1.176447, 2.665232, -1.374699, -1.338715, -1.374699, 3.721074, -1.387463, -1.146846, -1.387463, 3.795501, -1.188704, -1.648456, -1.188704, 2.725093, -0.500000, -0.073292, 0.500000, -0.140788, -0.500000, -0.205645, 0.500000, -0.126322, -0.673373, 0.906864, 0.673373, -0.197776, -0.536204, 0.017903, 0.536204, -0.305867, -0.547769, 0.582500, 0.547769, -0.144249, -0.500000, -0.031027, 0.500000, -0.086314, -0.511285, 0.077944, 0.511285, -0.199309, -0.500000, 0.079344, 0.500000, -0.094819, -0.525119, 0.121390, 0.525119, -0.253445, -0.504454, 0.354900, 0.504454, -0.081542, -0.500000, -0.010234, 0.500000, -0.072776, -0.506248, -0.158075, 0.506248, -0.182320, -0.530547, 0.190394, 0.530547, -0.278022, -0.650705, 0.842703, 0.650705, -0.140645, -0.517068, 0.099422, 0.517068, -0.220542, 0.106173, -0.109921, -0.933496, 1.000000, 0.944514, 1.000000, -0.944514, 1.000000, 0.984313, 1.000000, -0.984313, 1.000000, 0.949600, 1.000000, -0.949600, 1.000000, 0.818765, 1.000000, -0.818765, 1.000000, 0.974557, 1.000000, -0.974557, 1.000000, 1.000000, 1.000000, -1.000000, 1.000000, 0.889868, 1.000000, -0.889868, 1.000000, 0.415718, 1.000000, -0.415718, 1.000000, 0.405372, 1.000000, -0.405372, 1.000000, 0.423299, 1.000000, -0.423299, 1.000000, 0.399325, 1.000000, -0.399325, 1.000000, 0.335265, 1.000000, -0.335265, 1.000000, 0.380116, 1.000000, -0.380116, 1.000000, 0.374601, 1.000000, -0.374601, 1.000000, 0.343285, 1.000000, -0.343285, 1.000000, 0.405438, 1.000000, -0.405438, 1.000000, 0.427673, 1.000000, -0.427673, 1.000000, 0.422891, 1.000000, -0.422891, 1.000000, 0.385645, 1.000000, -0.385645, 1.000000, 0.415381, 1.000000, -0.415381, 1.000000, 0.391668, 1.000000, -0.391668, -5462869.954476, -14285714.285714, -0.000000, 0.382401, -5462869.954476, -14285714.285714, -0.000000, -0.000000, -0.000000, -0.000000, 2.615055, 0.000000, 0.000000, 0.000000, -0.000000, 2.615055, -0.000000, -0.000000, -0.000000, -0.038678, 0.021072, -0.000000, 0.042351, -0.032068, -1.276591, 0.564553, -1.276591, 3.175136, -1.203715, -1.150880, -1.203715, 2.799365, -1.296529, -2.241576, -1.296529, 3.282349, -1.182337, -0.970186, -1.182337, 2.693909, -1.169116, -1.288229, -1.169116, 2.629772, -1.233235, -0.725082, -1.233235, 2.948542, -1.456514, -0.948266, -1.456514, 4.211808, -1.334754, -0.731929, -1.334754, 3.493219, -1.315388, -0.117665, -1.315388, 3.385512, -1.491358, 0.950146, -1.491358, 4.430676, -1.252113, -1.122360, -1.252113, 3.046105, -1.181199, -0.794192, -1.181199, 2.688357, -1.233436, 1.266034, -1.233436, 2.949569, -1.202738, 0.200899, -1.202738, 2.794497, -0.561881, 0.615303, 0.561881, 0.247820, -0.500000, 0.038600, 0.500000, -0.034987, -0.513054, 0.201434, 0.513054, -0.205602, -0.610676, 0.735509, 0.610676, -0.043833, -0.526538, 0.521886, 0.526538, 0.064108, -0.507969, 0.348915, 0.507969, -0.187972, -0.529373, 0.102354, 0.529373, -0.272530, -0.500000, 0.270913, 0.500000, 0.009671, -0.500000, 0.167099, 0.500000, -0.099356, 0.011312, 0.214662, -1.446660, 1.000000, 1.000000, 1.000000, -1.000000, 1.000000, 0.978946, 1.000000, -0.978946, 1.000000, 0.971082, 1.000000, -0.971082, 1.000000, 1.000000, 1.000000, -1.000000, 1.000000, 1.000000, 1.000000, -1.000000, 1.000000, 0.935079, 1.000000, -0.935079, 1.000000, 1.000000, 1.000000, -1.000000, 1.000000, 0.962643, 1.000000, -0.962643, 1.000000, 0.959624, 1.000000, -0.959624, 1.000000, 0.326078, 1.000000, -0.326078, 1.000000, 0.420389, 1.000000, -0.420389, 1.000000, 0.429897, 1.000000, -0.429897, 1.000000, 0.339171, 1.000000, -0.339171, 1.000000, -0.500000, -0.500000, -3.999999, 1.000000, -0.074325, -0.250000, 0.072719, -0.000000, -4.088388, -0.000000, -0.072719, 0.000000, -0.000000, -0.000000, 0.000000, 0.000000, 0.000000, -0.000000, -0.000000, 0.297302, -0.000000, -11.313700, 0.000000, -0.000000, -0.057925, 0.297302, -0.000000, -11.313700, 0.000000, -0.000000, -0.028821, -5462869.954476, -14285714.285714, -0.000000, 0.382401, -5462869.954476, -14285714.285714, -0.000000, -0.000000, -0.000000, -0.000000, 2.615055, 0.000000, 0.000000, 0.000000, -0.000000, 2.615055, -0.000000, -0.000000, -0.068084, -0.000000, -0.012331, -0.024784, -0.000000, -0.036668, 0.607582, -1.474184, -1.474184, 4.322063, -0.110009, -1.163068, -1.163068, 2.600707, -0.904601, -1.189375, -1.189375, 2.728387, -0.077434, -1.533377, -1.533377, 4.702489, 0.474823, 0.521037, -0.521037, -0.058400, 0.125572, 0.519403, -0.519403, -0.229670, -0.006723, 0.500000, -0.500000, -0.119348, -0.171257, 0.534714, -0.534714, -0.298303, 0.198207, 0.500000, -0.500000, -0.091582, 0.148908, 0.500000, -0.500000, -0.111266, -0.241653, 0.514890, -0.514890, -0.212319, 0.396838, 0.510753, -0.510753, 0.055668, -0.145368, 0.500000, -0.500000, -0.001407, 0.845912, -0.023755, -0.007484, -0.027343, -1.031801, -0.063773, -0.026269, -0.013853, -1.316254, 0.142909, 0.139933, -1.150531, 0.069457, -0.066279, -0.148320};
    DTYPE B[569] = {};
    
    DTYPE X[569];
    DTYPE result[569] = {0.0};//{};
    

    auto x_hw_vec = buff_to_dvec(result, info.n);
    LDL_lsolve2(info.n, B, jc, ir, pr, result);
    ldl_lsolve_vec(info, buff_to_intvec_padlast(jc, info.n+1).data(), buff_to_intvec(ir, info.nnz).data(), buff_to_dvec(pr, info.nnz).data(), x_hw_vec.data(), buff_to_dvec(B, info.n).data());
	if (v_eq(result, x_hw_vec.data(), info.n)) {
		printf("TEST PASSED\n");
        return 0;
	} else {
		printf("TEST NOT PASSED\n");
        return 1;
	} 
}