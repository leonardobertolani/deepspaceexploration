#include <algorithm>
#include <stdio.h>
#include <vector>

#include "ldl_ltsolve_vec.h"

std::vector<int_vec> buff_to_intvec(int* b, size_t len) {
    std::vector<int_vec> v;
    int_vec chunk;
    for (size_t i = 0; i < len; i+=8) {
        size_t chunk_size = 8 <= (len - i) ? 8 : (len - i);
        size_t j = 0;
        for (; j < chunk_size; j++) {
            chunk[j] = b[i+j];
        }
        for (; j < 8; j++) {
            chunk[j] = 0;
        }
        v.push_back(chunk);
    }
    return v;
}

std::vector<int_vec> buff_to_intvec_padlast(int* b, size_t len) {
    std::vector<int_vec> v;
    int_vec chunk;
    for (size_t i = 0; i < len; i+=8) {
        size_t chunk_size = 8 <= (len - i) ? 8 : (len - i);
        size_t j = 0;
        for (; j < chunk_size; j++) {
            chunk[j] = b[i+j];
        }
        for (; j < 8; j++) {
            chunk[j] = b[len-1];
        }
        v.push_back(chunk);
    }
    /*
    for (int i = 0; i < v.size(); i++) {
        for (int j = 0; j < 8; j++) {
            printf("%d ", v[i][j]);
        }
        printf("\n");
    }
    */
    return v;
}

std::vector<double_vec> buff_to_dvec(double* b, size_t len) {
    std::vector<double_vec> v;
    double_vec chunk;
    for (size_t i = 0; i < len; i+=4) {
        size_t chunk_size = 4 <= (len - i) ? 4 : (len - i);
        size_t j = 0;
        for (; j < chunk_size; j++) {
            chunk[j] = b[i+j];
        }
        for (; j < 4; j++) {
            chunk[j] = 0;
        }
        v.push_back(chunk);
    }
    return v;
}


bool v_eq(DTYPE* x1, double_vec* x2, int len) {
    size_t j = 0, k = 0;
	for (auto i = 0; i < len; i++) {
        if (k >= 4) {
            k = 0;
            j++;
        }
	    double x2_el = x2[j][k];
	    k++;
		//printf("i: %d, x1 %f, x2 %f\n", i, x1[i], x2_el);
		if (abs(x1[i] - x2_el) > 1e-6) {
		    //printf("i: %d, x1 %f, x2 %f\n", i, x1[i], x2_el);
			return false;
		}
	}
	return true;
}



void LDL_ltsolve
(
    int n,		/* L is n-by-n, where n >= 0 */
    DTYPE X [ ],	/* size n.  right-hand-side on input, soln. on output */
    int Lp [ ],	/* input of size n+1, not modified */
    int Li [ ],	/* input of size lnz=Lp[n], not modified */
    DTYPE Lx [ ]	/* input of size lnz=Lp[n], not modified */
)
{
    // Official version
    int j, p, p2 ;
    for (j = n-1 ; j >= 0 ; j--){
		p2 = Lp [j+1] ;
		for (p = Lp [j] ; p < p2 ; p++){
			X [j] -= Lx [p] * X [Li [p]] ;
		}
    }

}

void invert_array_DTYPE(DTYPE* vec, int n) {

    for(int i = 0; i < n / 2; ++i) {
        DTYPE temp = vec[i];
        vec[i] = vec[n - 1 - i];
        vec[n - 1 - i] = temp;
    }
}

void invert_array_int(int* vec, int n) {

    for(int i = 0; i < n / 2; ++i) {
        int temp = vec[i];
        vec[i] = vec[n - 1 - i];
        vec[n - 1 - i] = temp;
    }
}

int main() {
    
    /*
    int jc_reversed[570] = {1, 1, 1, 0};
    int ir_reversed[971] = {1};
    DTYPE pr_reversed[971]= {3}; 
    DTYPE B_reversed[569] = {1, 1, 2};
    DTYPE X_in_order[569];
    spm_info info = {3, 3, 1};
    DTYPE result[569] = {0.0};
    
    int jc_in_order[570] = {0, 1, 1, 1}; 
    int ir_in_order[971] = {1}; 
    DTYPE pr_in_order[971]= {3};
    DTYPE B_in_order[569] = {2, 1, 1};

    auto x_hw_vec = buff_to_dvec(result, info.n);
    ldl_lsolve_vec(info, buff_to_intvec_padlast(jc_reversed, info.n+1).data(), buff_to_intvec(ir_reversed, info.nnz).data(), buff_to_dvec(pr_reversed, info.nnz).data(), x_hw_vec.data(), buff_to_dvec(B_reversed, info.n).data());

    invert_array_int(jc_reversed, 4);
    invert_array_DTYPE(B_reversed, 3);

    LDL_ltsolve(info.n, B_reversed, jc_reversed, ir_reversed, pr_reversed);
    invert_array_DTYPE(B_reversed, 3);
    */
    
    
    int jc_reversed[570] = {971, 971, 970, 968, 965, 961, 956, 952, 948, 944, 940, 936, 932, 928, 924, 920, 916, 912, 908, 904, 901, 897, 894, 891, 888, 886, 884, 882, 880, 878, 876, 874, 872, 870, 868, 866, 863, 861, 859, 857, 855, 853, 851, 849, 848, 847, 846, 845, 844, 843, 842, 841, 840, 839, 838, 837, 836, 835, 834, 833, 832, 831, 830, 829, 828, 827, 826, 825, 824, 823, 822, 821, 820, 819, 818, 817, 816, 815, 814, 813, 812, 811, 810, 809, 808, 807, 806, 805, 804, 803, 802, 801, 800, 799, 798, 797, 796, 793, 789, 785, 781, 777, 773, 769, 765, 761, 757, 753, 749, 745, 741, 737, 733, 729, 725, 721, 717, 713, 709, 705, 701, 698, 694, 691, 688, 685, 683, 681, 679, 677, 676, 675, 674, 673, 672, 671, 670, 669, 668, 667, 666, 665, 664, 663, 662, 661, 660, 659, 658, 657, 656, 655, 654, 653, 652, 651, 650, 649, 648, 647, 646, 645, 644, 643, 642, 641, 640, 639, 638, 637, 636, 635, 634, 633, 632, 631, 630, 629, 628, 627, 626, 625, 624, 623, 622, 621, 620, 619, 618, 617, 616, 615, 614, 613, 612, 611, 610, 609, 608, 607, 606, 605, 604, 603, 602, 601, 600, 599, 598, 597, 596, 595, 594, 593, 590, 586, 582, 578, 574, 570, 566, 562, 558, 554, 550, 546, 542, 538, 534, 530, 526, 522, 518, 514, 510, 506, 502, 498, 494, 490, 486, 482, 479, 475, 472, 469, 466, 464, 462, 460, 458, 457, 456, 455, 454, 453, 452, 451, 450, 449, 448, 447, 446, 445, 444, 443, 442, 441, 440, 439, 438, 437, 436, 435, 434, 433, 432, 431, 430, 429, 428, 427, 426, 425, 424, 423, 422, 421, 420, 419, 418, 417, 416, 415, 414, 413, 412, 411, 410, 409, 408, 407, 406, 405, 404, 403, 402, 401, 400, 399, 398, 397, 396, 395, 394, 393, 392, 391, 390, 389, 388, 387, 386, 385, 384, 383, 382, 381, 380, 379, 378, 377, 376, 375, 374, 373, 372, 371, 370, 369, 368, 367, 366, 365, 364, 363, 362, 359, 355, 351, 347, 343, 339, 335, 331, 327, 323, 319, 315, 311, 307, 303, 299, 295, 291, 287, 283, 279, 275, 271, 267, 264, 260, 257, 254, 251, 249, 247, 245, 243, 242, 241, 240, 239, 238, 237, 236, 235, 234, 233, 232, 231, 230, 229, 228, 227, 226, 225, 224, 223, 222, 221, 220, 219, 218, 217, 216, 215, 214, 213, 212, 211, 210, 209, 208, 207, 206, 205, 204, 203, 202, 201, 200, 199, 198, 197, 196, 195, 194, 193, 192, 191, 190, 189, 188, 187, 186, 185, 184, 183, 182, 181, 180, 179, 178, 177, 176, 175, 174, 173, 172, 171, 168, 164, 160, 156, 152, 148, 144, 140, 136, 132, 128, 124, 120, 117, 113, 110, 107, 104, 102, 100, 98, 96, 95, 94, 93, 92, 91, 90, 89, 88, 87, 86, 85, 84, 83, 82, 81, 80, 79, 78, 77, 76, 75, 74, 73, 72, 71, 70, 69, 68, 67, 66, 65, 64, 63, 62, 61, 60, 59, 58, 57, 56, 55, 54, 53, 52, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0};
    int ir_reversed[971] = {568, 568, 567, 568, 567, 566, 568, 567, 566, 565, 568, 567, 566, 565, 564, 568, 565, 564, 563, 568, 565, 564, 563, 568, 565, 564, 563, 568, 565, 564, 563, 568, 565, 564, 563, 568, 565, 564, 563, 568, 565, 564, 563, 568, 565, 564, 563, 568, 565, 564, 563, 568, 565, 564, 563, 568, 565, 564, 563, 568, 565, 564, 563, 568, 565, 564, 563, 568, 565, 563, 568, 565, 563, 549, 565, 549, 548, 565, 548, 547, 548, 547, 546, 547, 545, 548, 545, 565, 546, 549, 547, 568, 563, 563, 540, 563, 539, 563, 538, 538, 537, 538, 536, 538, 535, 538, 535, 534, 534, 533, 533, 532, 533, 531, 533, 530, 530, 529, 530, 528, 530, 527, 526, 550, 524, 550, 522, 551, 520, 551, 518, 552, 516, 552, 514, 553, 512, 553, 510, 554, 508, 554, 506, 555, 504, 555, 502, 556, 500, 556, 498, 557, 496, 557, 494, 558, 492, 558, 490, 559, 488, 559, 486, 560, 484, 560, 482, 561, 480, 561, 478, 562, 476, 562, 474, 568, 564, 563, 568, 564, 563, 472, 568, 564, 563, 472, 568, 564, 563, 472, 568, 564, 563, 472, 568, 564, 563, 472, 568, 564, 563, 472, 568, 564, 563, 472, 568, 564, 563, 472, 568, 564, 563, 472, 568, 564, 563, 472, 568, 564, 563, 472, 568, 564, 563, 472, 568, 564, 563, 472, 568, 564, 563, 472, 568, 564, 563, 472, 568, 564, 563, 472, 568, 564, 563, 472, 568, 564, 563, 472, 568, 564, 563, 472, 568, 564, 563, 472, 568, 564, 563, 472, 568, 564, 563, 472, 568, 564, 563, 472, 568, 563, 472, 568, 563, 472, 448, 472, 448, 447, 472, 447, 446, 447, 446, 445, 446, 444, 447, 444, 472, 445, 448, 446, 449, 439, 449, 437, 450, 435, 450, 433, 451, 431, 451, 429, 452, 427, 452, 425, 453, 423, 453, 421, 454, 419, 454, 417, 455, 415, 455, 413, 456, 411, 456, 409, 457, 407, 457, 405, 458, 403, 458, 401, 459, 399, 459, 397, 460, 395, 460, 393, 461, 391, 461, 389, 462, 387, 462, 385, 463, 383, 463, 381, 464, 379, 464, 377, 465, 375, 465, 373, 466, 371, 466, 369, 467, 367, 467, 365, 468, 363, 468, 361, 469, 359, 469, 357, 568, 564, 563, 568, 564, 563, 355, 568, 564, 563, 355, 568, 564, 563, 355, 568, 564, 563, 355, 568, 564, 563, 355, 568, 564, 563, 355, 568, 564, 563, 355, 568, 564, 563, 355, 568, 564, 563, 355, 568, 564, 563, 355, 568, 564, 563, 355, 568, 564, 563, 355, 568, 564, 563, 355, 568, 564, 563, 355, 568, 564, 563, 355, 568, 564, 563, 355, 568, 564, 563, 355, 568, 564, 563, 355, 568, 564, 563, 355, 568, 564, 563, 355, 568, 564, 563, 355, 568, 564, 563, 355, 568, 564, 563, 355, 568, 564, 563, 355, 568, 564, 563, 355, 568, 564, 563, 355, 568, 564, 563, 355, 568, 563, 355, 568, 563, 355, 327, 355, 327, 326, 355, 326, 325, 326, 325, 324, 325, 323, 326, 323, 355, 324, 327, 325, 328, 318, 328, 316, 329, 314, 329, 312, 330, 310, 330, 308, 331, 306, 331, 304, 332, 302, 332, 300, 333, 298, 333, 296, 334, 294, 334, 292, 335, 290, 335, 288, 336, 286, 336, 284, 337, 282, 337, 280, 338, 278, 338, 276, 339, 274, 339, 272, 340, 270, 340, 268, 341, 266, 341, 264, 342, 262, 342, 260, 343, 258, 343, 256, 344, 254, 344, 252, 345, 250, 345, 248, 346, 246, 346, 244, 347, 242, 347, 240, 348, 238, 348, 236, 349, 234, 349, 232, 350, 230, 350, 228, 351, 226, 351, 224, 568, 564, 563, 568, 564, 563, 222, 568, 564, 563, 222, 568, 564, 563, 222, 568, 564, 563, 222, 568, 564, 563, 222, 568, 564, 563, 222, 568, 564, 563, 222, 568, 564, 563, 222, 568, 564, 563, 222, 568, 564, 563, 222, 568, 564, 563, 222, 568, 564, 563, 222, 568, 564, 563, 222, 568, 564, 563, 222, 568, 564, 563, 222, 568, 564, 563, 222, 568, 564, 563, 222, 568, 564, 563, 222, 568, 564, 563, 222, 568, 564, 563, 222, 568, 564, 563, 222, 568, 564, 563, 222, 568, 564, 563, 222, 568, 563, 222, 568, 563, 222, 198, 222, 198, 197, 222, 197, 196, 197, 196, 195, 196, 194, 197, 194, 222, 195, 198, 196, 199, 189, 199, 187, 200, 185, 200, 183, 201, 181, 201, 179, 202, 177, 202, 175, 203, 173, 203, 171, 204, 169, 204, 167, 205, 165, 205, 163, 206, 161, 206, 159, 207, 157, 207, 155, 208, 153, 208, 151, 209, 149, 209, 147, 210, 145, 210, 143, 211, 141, 211, 139, 212, 137, 212, 135, 213, 133, 213, 131, 214, 129, 214, 127, 215, 125, 215, 123, 216, 121, 216, 119, 568, 564, 563, 568, 564, 563, 117, 568, 564, 563, 117, 568, 564, 563, 117, 568, 564, 563, 117, 568, 564, 563, 117, 568, 564, 563, 117, 568, 564, 563, 117, 568, 564, 563, 117, 568, 564, 563, 117, 568, 564, 563, 117, 568, 564, 563, 117, 568, 564, 563, 117, 568, 563, 117, 568, 563, 117, 104, 117, 104, 103, 117, 103, 102, 103, 102, 101, 102, 100, 103, 100, 117, 101, 104, 102, 105, 95, 105, 93, 106, 91, 106, 89, 107, 87, 107, 85, 108, 83, 108, 81, 109, 79, 109, 77, 110, 75, 110, 73, 111, 71, 111, 69, 112, 67, 112, 65, 113, 63, 113, 61, 114, 59, 114, 57, 115, 55, 115, 53, 116, 51, 116, 49, 217, 47, 217, 45, 218, 43, 218, 41, 219, 39, 219, 37, 220, 35, 220, 33, 221, 31, 221, 29, 352, 27, 352, 25, 353, 23, 353, 21, 354, 19, 354, 17, 470, 15, 470, 13, 471, 11, 471, 9, 567, 7, 567, 5, 566, 3, 566, 1};
    DTYPE pr_reversed[971]= {-0.148320, -0.066279, 0.069457, -1.150531, 0.139933, 0.142909, -1.316254, -0.013853, -0.026269, -0.063773, -1.031801, -0.027343, -0.007484, -0.023755, 0.845912, -0.001407, -0.500000, 0.500000, -0.145368, 0.055668, -0.510753, 0.510753, 0.396838, -0.212319, -0.514890, 0.514890, -0.241653, -0.111266, -0.500000, 0.500000, 0.148908, -0.091582, -0.500000, 0.500000, 0.198207, -0.298303, -0.534714, 0.534714, -0.171257, -0.119348, -0.500000, 0.500000, -0.006723, -0.229670, -0.519403, 0.519403, 0.125572, -0.058400, -0.521037, 0.521037, 0.474823, 4.702489, -1.533377, -1.533377, -0.077434, 2.728387, -1.189375, -1.189375, -0.904601, 2.600707, -1.163068, -1.163068, -0.110009, 4.322063, -1.474184, -1.474184, 0.607582, -0.036668, -0.000000, -0.024784, -0.012331, -0.000000, -0.068084, -0.000000, -0.000000, 2.615055, -0.000000, 0.000000, 0.000000, 0.000000, 2.615055, -0.000000, -0.000000, -0.000000, -0.000000, -14285714.285714, -5462869.954476, 0.382401, -0.000000, -14285714.285714, -5462869.954476, -0.028821, -0.000000, 0.000000, -11.313700, -0.000000, 0.297302, -0.057925, -0.000000, 0.000000, -11.313700, -0.000000, 0.297302, -0.000000, -0.000000, 0.000000, 0.000000, 0.000000, -0.000000, -0.000000, 0.000000, -0.072719, -0.000000, -4.088388, -0.000000, 0.072719, -0.250000, -0.074325, 1.000000, -3.999999, -0.500000, -0.500000, 1.000000, -0.339171, 1.000000, 0.339171, 1.000000, -0.429897, 1.000000, 0.429897, 1.000000, -0.420389, 1.000000, 0.420389, 1.000000, -0.326078, 1.000000, 0.326078, 1.000000, -0.959624, 1.000000, 0.959624, 1.000000, -0.962643, 1.000000, 0.962643, 1.000000, -1.000000, 1.000000, 1.000000, 1.000000, -0.935079, 1.000000, 0.935079, 1.000000, -1.000000, 1.000000, 1.000000, 1.000000, -1.000000, 1.000000, 1.000000, 1.000000, -0.971082, 1.000000, 0.971082, 1.000000, -0.978946, 1.000000, 0.978946, 1.000000, -1.000000, 1.000000, 1.000000, 1.000000, -1.446660, 0.214662, 0.011312, -0.099356, 0.500000, 0.167099, -0.500000, 0.009671, 0.500000, 0.270913, -0.500000, -0.272530, 0.529373, 0.102354, -0.529373, -0.187972, 0.507969, 0.348915, -0.507969, 0.064108, 0.526538, 0.521886, -0.526538, -0.043833, 0.610676, 0.735509, -0.610676, -0.205602, 0.513054, 0.201434, -0.513054, -0.034987, 0.500000, 0.038600, -0.500000, 0.247820, 0.561881, 0.615303, -0.561881, 2.794497, -1.202738, 0.200899, -1.202738, 2.949569, -1.233436, 1.266034, -1.233436, 2.688357, -1.181199, -0.794192, -1.181199, 3.046105, -1.252113, -1.122360, -1.252113, 4.430676, -1.491358, 0.950146, -1.491358, 3.385512, -1.315388, -0.117665, -1.315388, 3.493219, -1.334754, -0.731929, -1.334754, 4.211808, -1.456514, -0.948266, -1.456514, 2.948542, -1.233235, -0.725082, -1.233235, 2.629772, -1.169116, -1.288229, -1.169116, 2.693909, -1.182337, -0.970186, -1.182337, 3.282349, -1.296529, -2.241576, -1.296529, 2.799365, -1.203715, -1.150880, -1.203715, 3.175136, -1.276591, 0.564553, -1.276591, -0.032068, 0.042351, -0.000000, 0.021072, -0.038678, -0.000000, -0.000000, -0.000000, 2.615055, -0.000000, 0.000000, 0.000000, 0.000000, 2.615055, -0.000000, -0.000000, -0.000000, -0.000000, -14285714.285714, -5462869.954476, 0.382401, -0.000000, -14285714.285714, -5462869.954476, -0.391668, 1.000000, 0.391668, 1.000000, -0.415381, 1.000000, 0.415381, 1.000000, -0.385645, 1.000000, 0.385645, 1.000000, -0.422891, 1.000000, 0.422891, 1.000000, -0.427673, 1.000000, 0.427673, 1.000000, -0.405438, 1.000000, 0.405438, 1.000000, -0.343285, 1.000000, 0.343285, 1.000000, -0.374601, 1.000000, 0.374601, 1.000000, -0.380116, 1.000000, 0.380116, 1.000000, -0.335265, 1.000000, 0.335265, 1.000000, -0.399325, 1.000000, 0.399325, 1.000000, -0.423299, 1.000000, 0.423299, 1.000000, -0.405372, 1.000000, 0.405372, 1.000000, -0.415718, 1.000000, 0.415718, 1.000000, -0.889868, 1.000000, 0.889868, 1.000000, -1.000000, 1.000000, 1.000000, 1.000000, -0.974557, 1.000000, 0.974557, 1.000000, -0.818765, 1.000000, 0.818765, 1.000000, -0.949600, 1.000000, 0.949600, 1.000000, -0.984313, 1.000000, 0.984313, 1.000000, -0.944514, 1.000000, 0.944514, 1.000000, -0.933496, -0.109921, 0.106173, -0.220542, 0.517068, 0.099422, -0.517068, -0.140645, 0.650705, 0.842703, -0.650705, -0.278022, 0.530547, 0.190394, -0.530547, -0.182320, 0.506248, -0.158075, -0.506248, -0.072776, 0.500000, -0.010234, -0.500000, -0.081542, 0.504454, 0.354900, -0.504454, -0.253445, 0.525119, 0.121390, -0.525119, -0.094819, 0.500000, 0.079344, -0.500000, -0.199309, 0.511285, 0.077944, -0.511285, -0.086314, 0.500000, -0.031027, -0.500000, -0.144249, 0.547769, 0.582500, -0.547769, -0.305867, 0.536204, 0.017903, -0.536204, -0.197776, 0.673373, 0.906864, -0.673373, -0.126322, 0.500000, -0.205645, -0.500000, -0.140788, 0.500000, -0.073292, -0.500000, 2.725093, -1.188704, -1.648456, -1.188704, 3.795501, -1.387463, -1.146846, -1.387463, 3.721074, -1.374699, -1.338715, -1.374699, 2.665232, -1.176447, -0.709926, -1.176447, 3.419705, -1.321571, -0.155689, -1.321571, 3.513710, -1.338402, -0.816598, -1.338402, 3.277586, -1.295650, -1.171444, -1.295650, 3.676338, -1.366962, 0.799001, -1.366962, 2.507145, -1.143351, -1.466763, -1.143351, 2.654974, -1.174331, -0.922714, -1.174331, 3.474286, -1.331373, 0.072494, -1.331373, 3.735151, -1.377124, -0.865274, -1.377124, -0.044397, 0.023415, -0.000000, 0.011651, -0.012801, -0.000000, -0.000000, -0.000000, 2.615055, -0.000000, 0.000000, 0.000000, 0.000000, 2.615055, -0.000000, -0.000000, -0.000000, -0.000000, -14285714.285714, -5462869.954476, 0.382401, -0.000000, -14285714.285714, -5462869.954476, -0.363075, 1.000000, 0.363075, 1.000000, -0.375552, 1.000000, 0.375552, 1.000000, -0.425774, 1.000000, 0.425774, 1.000000, -0.437311, 1.000000, 0.437311, 1.000000, -0.365775, 1.000000, 0.365775, 1.000000, -0.385907, 1.000000, 0.385907, 1.000000, -0.373580, 1.000000, 0.373580, 1.000000, -0.378337, 1.000000, 0.378337, 1.000000, -0.425009, 1.000000, 0.425009, 1.000000, -0.363716, 1.000000, 0.363716, 1.000000, -0.360370, 1.000000, 0.360370, 1.000000, -0.420626, 1.000000, 0.420626, 1.000000, -1.000000, 1.000000, 1.000000, 1.000000, -1.000000, 1.000000, 1.000000, 1.000000, -0.742530, 1.000000, 0.742530, 1.000000, -0.932481, 1.000000, 0.932481, 1.000000, -0.912793, 1.000000, 0.912793, 1.000000, -1.000000, 1.000000, 1.000000, 1.000000, -0.977928, 1.000000, 0.977928, 1.000000, -1.000000, 1.000000, 1.000000, 1.000000, -0.952164, 1.000000, 0.952164, 1.000000, -0.991170, 1.000000, 0.991170, 1.000000, -1.000000, 1.000000, 1.000000, 1.000000, -0.987657, 1.000000, 0.987657, 1.000000, -1.289672, 0.128797, 0.129371, 0.069056, 0.500000, 0.037842, -0.500000, -0.190063, 0.508594, 0.324792, -0.508594, 0.014756, 0.505618, 0.362339, -0.505618, 0.161203, 0.500000, 0.147518, -0.500000, -0.067256, 0.500000, -0.206339, -0.500000, -0.131763, 0.504643, 0.356100, -0.504643, -0.323589, 0.539570, 0.287779, -0.539570, 0.081998, 0.500000, -0.308640, -0.500000, -0.162585, 0.500000, 0.198911, -0.500000, -0.122016, 0.500000, -0.144793, -0.500000, 3.263941, -1.293130, -1.653142, -1.293130, 2.913029, -1.226281, -0.129205, -1.226281, 2.443524, -1.129719, -1.386312, -1.129719, 3.122216, -1.266617, -0.743317, -1.266617, 3.842409, -1.395439, 1.213683, -1.395439, 3.114316, -1.265120, 0.107267, -1.265120, 2.913258, -1.226326, -0.355066, -1.226326, 2.158288, -1.066138, -0.989944, -1.066138, 2.527285, -1.147628, -1.008628, -1.147628, 3.870811, -1.400243, -0.414859, -1.400243, 3.268908, -1.294048, 0.018207, -1.294048, 2.936411, -1.230865, -0.807148, -1.230865, 2.748839, -1.193527, 0.264396, -1.193527, -0.011494, 0.015146, -0.000000, 0.007536, -0.092678, -0.000000, -0.000000, -0.000000, 2.615055, -0.000000, 0.000000, 0.000000, 0.000000, 2.615055, -0.000000, -0.000000, -0.000000, -0.000000, -14285714.285714, -5462869.954476, 0.382401, -0.000000, -14285714.285714, -5462869.954476, -0.418926, 1.000000, 0.418926, 1.000000, -0.406218, 1.000000, 0.406218, 1.000000, -0.386384, 1.000000, 0.386384, 1.000000, -0.357081, 1.000000, 0.357081, 1.000000, -0.435681, 1.000000, 0.435681, 1.000000, -0.468982, 1.000000, 0.468982, 1.000000, -0.407722, 1.000000, 0.407722, 1.000000, -0.395219, 1.000000, 0.395219, 1.000000, -0.358310, 1.000000, 0.358310, 1.000000, -0.394752, 1.000000, 0.394752, 1.000000, -0.442588, 1.000000, 0.442588, 1.000000, -0.407737, 1.000000, 0.407737, 1.000000, -0.386659, 1.000000, 0.386659, 1.000000, -1.000000, 1.000000, 1.000000, 1.000000, -1.000000, 1.000000, 1.000000, 1.000000, -1.000000, 1.000000, 1.000000, 1.000000, -0.926663, 1.000000, 0.926663, 1.000000, -0.990799, 1.000000, 0.990799, 1.000000, -1.334432, 0.162701, 0.124133, -0.233661, 0.520399, 0.290000, -0.520399, 0.074012, 0.508183, 0.379222, -0.508183, 0.014831, 0.500000, -0.013533, -0.500000, -0.088190, 0.500000, 0.043160, -0.500000, -0.245790, 0.523333, 0.147915, -0.523333, 2.848117, -1.213453, -1.354359, -1.213453, 3.159603, -1.273672, -0.699382, -1.273672, 2.765212, -1.196839, -0.955808, -1.196839, 3.433882, -1.324125, 0.467849, -1.324125, 3.387373, -1.315726, -0.003475, -1.315726, 3.849750, -1.396683, -0.736173, -1.396683, 2.654767, -1.174289, -0.623619, -1.174289, -0.046808, -0.008856, -0.000000, -0.004406, -0.051233, -0.000000, -0.000000, -0.000000, 2.615055, -0.000000, 0.000000, 0.000000, 0.000000, 2.615055, -0.000000, -0.000000, -0.000000, -0.000000, -14285714.285714, -5462869.954476, 0.382401, -0.000000, -14285714.285714, -5462869.954476, -0.425790, 1.000000, 0.425790, 1.000000, -0.357991, 1.000000, 0.357991, 1.000000, -0.380018, 1.000000, 0.380018, 1.000000, -0.377608, 1.000000, 0.377608, 1.000000, -0.417767, 1.000000, 0.417767, 1.000000, -0.392566, 1.000000, 0.392566, 1.000000, -0.412047, 1.000000, 0.412047, 1.000000, -0.955415, 1.000000, 0.955415, 1.000000, -1.000000, 1.000000, 1.000000, 1.000000, -1.000000, 1.000000, 1.000000, 1.000000, -0.983897, 1.000000, 0.983897, 1.000000, -0.960802, 1.000000, 0.960802, 1.000000, -1.000000, 1.000000, 1.000000, 1.000000, -1.000000, 1.000000, 1.000000, 1.000000, -0.988888, 1.000000, 0.988888, 1.000000, -0.983103, 1.000000, 0.983103, 1.000000, -1.000000, 1.000000, 1.000000, 1.000000, -0.942423, 1.000000, 0.942423, 1.000000, -0.768397, 1.000000, 0.768397, 1.000000, -0.966990, 1.000000, 0.966990, 1.000000, -1.000000, 1.000000, 1.000000, 1.000000, -1.000000, 1.000000, 1.000000, 1.000000, -0.952642, 1.000000, 0.952642, 1.000000, -0.987291, 1.000000, 0.987291, 1.000000};
    DTYPE B_reversed[569] = {0.239280, 0.010407, 0.010127, -0.977828, 0.063400, 0.021269, 0.500000, 0.510753, 0.514890, 0.500000, 0.500000, 0.534714, 0.500000, 0.519403, 0.521037, 1.533377, 1.189375, 1.163068, 1.474184, -0.000000, -0.000000, -0.000000, 0.000000, -0.000000, -0.000000, 0.000000, -0.000000, 0.000000, -0.000000, 0.000000, -0.000000, -0.000000, 0.000000, -0.000000, -0.000000, 0.000000, 0.148651, -0.510810, 2.088388, -0.145437, 0.500000, -2.000000, 0.000000, -0.000000, 0.000000, -0.000000, 0.000000, -0.000000, 0.000000, -0.000000, 0.000000, -0.000000, 0.000000, -0.000000, 0.000000, -0.000000, 0.000000, -0.000000, 0.000000, -0.000000, 0.000000, -0.000000, 0.000000, -0.000000, 0.000000, -0.000000, 0.000000, -0.000000, 0.000000, -0.000000, 0.000000, -0.000000, 0.000000, -0.000000, 0.000000, -0.000000, 0.000000, -0.000000, 0.000000, -0.000000, 0.000000, -0.000000, 0.000000, -0.000000, 0.000000, -0.000000, 0.000000, -0.000000, 0.000000, -0.000000, 0.000000, -0.000000, 0.000000, -0.000000, 0.000000, -0.000000, -0.987444, 0.500000, 0.500000, 0.529373, 0.507969, 0.526538, 0.610676, 0.513054, 0.500000, 0.561881, 1.202738, 1.233436, 1.181199, 1.252113, 1.491358, 1.315388, 1.334754, 1.456514, 1.233235, 1.169116, 1.182337, 1.296529, 1.203715, 1.276591, -0.000000, -0.000000, -0.000000, 0.000000, -0.000000, -0.000000, 0.000000, -0.000000, 0.000000, 0.000000, -0.000000, 0.000000, -0.000000, 0.000000, -0.000000, 0.000000, -0.000000, 0.000000, -0.000000, 0.000000, -0.000000, 0.000000, -0.000000, 0.000000, -0.000000, 0.000000, -0.000000, 0.000000, -0.000000, 0.000000, -0.000000, 0.000000, -0.000000, 0.000000, -0.000000, 0.000000, -0.000000, 0.000000, -0.000000, 0.000000, -0.000000, 0.000000, -0.000000, 0.000000, -0.000000, 0.000000, -0.000000, 0.000000, -0.000000, 0.000000, -0.000000, 0.000000, -0.000000, 0.000000, -0.000000, 0.000000, -0.000000, 0.000000, -0.000000, 0.000000, -0.000000, 0.000000, -0.000000, 0.000000, -0.000000, 0.000000, -0.000000, 0.000000, -0.000000, 0.000000, -0.000000, 0.000000, -0.000000, 0.000000, -0.000000, 0.000000, -0.000000, 0.000000, -0.000000, 0.000000, -0.000000, 0.000000, -0.000000, 0.000000, -0.000000, 0.000000, -0.000000, 0.000000, -0.000000, 0.000000, -0.000000, 0.000000, -0.000000, -0.989284, 0.517068, 0.650705, 0.530547, 0.506248, 0.500000, 0.504454, 0.525119, 0.500000, 0.511285, 0.500000, 0.547769, 0.536204, 0.673373, 0.500000, 0.500000, 1.188704, 1.387463, 1.374699, 1.176447, 1.321571, 1.338402, 1.295650, 1.366962, 1.143351, 1.174331, 1.331373, 1.377124, -0.000000, -0.000000, -0.000000, 0.000000, -0.000000, -0.000000, 0.000000, -0.000000, 0.000000, 0.000000, -0.000000, 0.000000, -0.000000, 0.000000, -0.000000, 0.000000, -0.000000, 0.000000, -0.000000, 0.000000, -0.000000, 0.000000, -0.000000, 0.000000, -0.000000, 0.000000, -0.000000, 0.000000, -0.000000, 0.000000, -0.000000, 0.000000, -0.000000, 0.000000, -0.000000, 0.000000, -0.000000, 0.000000, -0.000000, 0.000000, -0.000000, 0.000000, -0.000000, 0.000000, -0.000000, 0.000000, -0.000000, 0.000000, -0.000000, 0.000000, -0.000000, 0.000000, -0.000000, 0.000000, -0.000000, 0.000000, -0.000000, 0.000000, -0.000000, 0.000000, -0.000000, 0.000000, -0.000000, 0.000000, -0.000000, 0.000000, -0.000000, 0.000000, -0.000000, 0.000000, -0.000000, 0.000000, -0.000000, 0.000000, -0.000000, 0.000000, -0.000000, 0.000000, -0.000000, 0.000000, -0.000000, 0.000000, -0.000000, 0.000000, -0.000000, 0.000000, -0.000000, 0.000000, -0.000000, 0.000000, -0.000000, 0.000000, -0.000000, 0.000000, -0.000000, 0.000000, -0.000000, 0.000000, -0.000000, 0.000000, -0.000000, 0.000000, -0.000000, 0.000000, -0.000000, -0.987444, 0.500000, 0.508594, 0.505618, 0.500000, 0.500000, 0.504643, 0.539570, 0.500000, 0.500000, 0.500000, 1.293130, 1.226281, 1.129719, 1.266617, 1.395439, 1.265120, 1.226326, 1.066138, 1.147628, 1.400243, 1.294048, 1.230865, 1.193527, -0.000000, -0.000000, -0.000000, 0.000000, -0.000000, -0.000000, 0.000000, -0.000000, 0.000000, 0.000000, -0.000000, 0.000000, -0.000000, 0.000000, -0.000000, 0.000000, -0.000000, 0.000000, -0.000000, 0.000000, -0.000000, 0.000000, -0.000000, 0.000000, -0.000000, 0.000000, -0.000000, 0.000000, -0.000000, 0.000000, -0.000000, 0.000000, -0.000000, 0.000000, -0.000000, 0.000000, -0.000000, 0.000000, -0.000000, 0.000000, -0.000000, 0.000000, -0.000000, 0.000000, -0.000000, 0.000000, -0.000000, 0.000000, -0.000000, 0.000000, -0.000000, 0.000000, -0.000000, 0.000000, -0.000000, 0.000000, -0.000000, 0.000000, -0.000000, 0.000000, -0.000000, 0.000000, -0.000000, 0.000000, -0.000000, 0.000000, -0.000000, 0.000000, -0.000000, 0.000000, -0.000000, 0.000000, -0.000000, 0.000000, -0.000000, 0.000000, -0.000000, 0.000000, -0.000000, 0.000000, -0.000000, -0.976208, 0.520399, 0.508183, 0.500000, 0.500000, 0.523333, 1.213453, 1.273672, 1.196839, 1.324125, 1.315726, 1.396683, 1.174289, -0.000000, -0.000000, -0.000000, 0.000000, -0.000000, -0.000000, 0.000000, -0.000000, 0.000000, 0.000000, -0.000000, 0.000000, -0.000000, 0.000000, -0.000000, 0.000000, -0.000000, 0.000000, -0.000000, 0.000000, -0.000000, 0.000000, -0.000000, 0.000000, -0.000000, 0.000000, -0.000000, 0.000000, -0.000000, 0.000000, -0.000000, 0.000000, -0.000000, 0.000000, -0.000000, 0.000000, -0.000000, 0.000000, -0.000000, 0.000000, -0.000000, 0.000000, -0.000000, 0.000000, -0.000000, 0.000000, -0.000000, 0.000000, -0.000000, 0.000000, -0.000000, 0.000000, -0.000000, 0.000000, -0.000000, 0.000000, -0.000000, 0.000000, -0.000000, 0.000000, -0.000000, 0.000000, -0.000000, 0.000000, -0.000000, 0.000000, -0.000000, 0.000000, -0.000000, 0.000000, -0.000000, 0.000000, -0.000000, 0.000000, -0.000000, 0.000000, -0.000000, 0.000000, -0.000000, 0.000000, -0.000000, 0.000000, -0.000000, 0.000000, -0.000000, 0.000000, -0.000000, 0.000000, -0.000000, 0.000000, -0.000000, 0.000000, -0.000000, 0.000000, -0.000000, 0.000000, -0.000000, 0.000000, -0.000000, 0.000000, -0.000000, 0.000000, -0.000000, 0.000000, -0.000000};
    DTYPE X_in_order[569];
    spm_info info = {569, 569, 971};
    DTYPE result[569] = {0.0};

    auto x_hw_vec = buff_to_dvec(result, info.n);
    ldl_ltsolve_vec(info, buff_to_intvec_padlast(jc_reversed, info.n+1).data(), buff_to_intvec(ir_reversed, info.nnz).data(), buff_to_dvec(pr_reversed, info.nnz).data(), x_hw_vec.data(), buff_to_dvec(B_reversed, info.n).data());

    invert_array_int(jc_reversed, 570);
    invert_array_int(ir_reversed, 971);
    invert_array_DTYPE(pr_reversed, 971);
    invert_array_DTYPE(B_reversed, 569);

    LDL_ltsolve(info.n, B_reversed, jc_reversed, ir_reversed, pr_reversed);
    invert_array_DTYPE(B_reversed, 569);

    size_t j = 0, k = 0;
	for (auto i = 0; i < info.n; i++) {
        if (k >= 4) {
            k = 0;
            j++;
        }
	    double x2_el = x_hw_vec.data()[j][k];
	    k++;
		//printf("i: %d, sw: %f, hw: %f\n", i, B_reversed[i], x2_el);
	}
    

    if (v_eq(B_reversed, x_hw_vec.data(), info.n)) {
		printf("TEST PASSED\n");
        return 0;
	} else {
		printf("TEST NOT PASSED\n");
        return 1;
	} 
}